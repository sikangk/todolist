{"version":3,"sources":["components/Template.js","components/Head.js","Context.js","components/Create.js","components/Item.js","components/Todolist.js","components/Completeitem.js","components/Completelist.js","components/List.js","App.js","serviceWorker.js","index.js"],"names":["TemplateBlock","styled","div","Template","children","HeadBlock","Head","today","Date","dateString","toLocaleDateString","year","month","day","dayName","weekday","className","initialTodos","todoReducer","state","action","type","concat","todo","map","id","done","complete","filter","Error","TodoStateContext","createContext","TodoDispatchContext","TodoNextIdContext","TodoProvider","useReducer","dispatch","nextId","useRef","Provider","value","useTodoState","context","useContext","useTodoDispatch","AddButton","button","props","open","css","InsertFormPositioner","InsertForm","form","Input","input","SubmitButton","Create","useState","setOpen","setValue","useTodoNextId","onSubmit","e","preventDefault","current","text","placeholder","autoFocus","onChange","target","onClick","CheckCircle","Text","Remove","ItemBlock","Item","TodoListBlock","TodoHeadBlcok","Todolist","todos","key","CompleteitemBlock","CompleteText","Completeitem","CompleteListBlock","CompleteListHeadBlock","Completelist","ListBlock","List","GlobalStyle","createGlobalStyle","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.357b3433.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TemplateBlock = styled.div`\r\n  max-width: 768px;\r\n  height: 678px;\r\n\r\n  position: relative;\r\n  background: white;\r\n  opacity: 0.5;\r\n  border-radius: 16px;\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.4);\r\n\r\n  margin: 0 auto;\r\n  margin-top: 32px;\r\n  margin-bottom: 32px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nfunction Template({ children }) {\r\n  return <TemplateBlock>{children}</TemplateBlock>;\r\n}\r\n\r\nexport default Template;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst HeadBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n\r\n  width: 100%;\r\n  padding-top: 12px;\r\n  padding-left: 32px;\r\n  padding-right: 32px;\r\n  padding-bottom: 12px;\r\n  border-bottom: 1px solid #e9ecef;\r\n  h1 {\r\n    margin: 0;\r\n    font-size: 36px;\r\n    color: #343a40;\r\n  }\r\n  .day {\r\n    margin-top: 4px;\r\n    color: #868e96;\r\n    font-size: 21px;\r\n  }\r\n`;\r\n\r\nfunction Head() {\r\n  const today = new Date();\r\n  const dateString = today.toLocaleDateString(\"ko-KR\", {\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n  });\r\n  const dayName = today.toLocaleDateString(\"ko-KR\", {\r\n    weekday: \"long\",\r\n  });\r\n\r\n  return (\r\n    <HeadBlock>\r\n      <h1>{dateString}</h1>\r\n      <div className=\"day\">{dayName}</div>\r\n    </HeadBlock>\r\n  );\r\n}\r\nexport default Head;\r\n","import React, { useReducer, createContext, useContext, useRef } from \"react\";\r\n\r\nconst initialTodos = [];\r\n\r\nfunction todoReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"CREATE\":\r\n      return state.concat(action.todo);\r\n    case \"TOGGLE\":\r\n      return state.map((todo) =>\r\n        todo.id === action.id\r\n          ? { ...todo, done: !todo.done, complete: !todo.complete }\r\n          : todo\r\n      );\r\n    case \"REMOVE\":\r\n      return state.filter((todo) => todo.id !== action.id);\r\n    default:\r\n      throw new Error(`unhandeld action type: ${action.type}`);\r\n  }\r\n}\r\n\r\nconst TodoStateContext = createContext();\r\nconst TodoDispatchContext = createContext();\r\nconst TodoNextIdContext = createContext();\r\n\r\nexport function TodoProvider({ children }) {\r\n  const [state, dispatch] = useReducer(todoReducer, initialTodos);\r\n  const nextId = useRef(1);\r\n  return (\r\n    <TodoStateContext.Provider value={state}>\r\n      <TodoDispatchContext.Provider value={dispatch}>\r\n        <TodoNextIdContext.Provider value={nextId}>\r\n          {children}\r\n        </TodoNextIdContext.Provider>\r\n      </TodoDispatchContext.Provider>\r\n    </TodoStateContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useTodoState() {\r\n  const context = useContext(TodoStateContext);\r\n  if (!context) {\r\n    throw new Error(\"Cannot find TodoProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nexport function useTodoDispatch() {\r\n  const context = useContext(TodoDispatchContext);\r\n  if (!context) {\r\n    throw new Error(\"Cannot find TodoProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nexport function useTodoNextId() {\r\n  const context = useContext(TodoNextIdContext);\r\n  if (!context) {\r\n    throw new Error(\"Cannot find TodoProvider\");\r\n  }\r\n  return context;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { MdAdd } from \"react-icons/md\";\r\nimport { useTodoDispatch, useTodoNextId } from \"../Context\";\r\n\r\nconst AddButton = styled.button`\r\n  z-index: 5;\r\n  cursor: pointer;\r\n  width: 40px;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 50%;\r\n\r\n  position: absolute;\r\n  right: 10px;\r\n  bottom: 10px;\r\n  font-size: 30px;\r\n\r\n  border: none;\r\n  outline: none;\r\n\r\n  transition: 0.125s all ease-in;\r\n\r\n  &:hover {\r\n    background: #63e6be;\r\n  }\r\n  &:active {\r\n    background: #20c997;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.open &&\r\n    css`\r\n      &:hover {\r\n        background: #ff8787;\r\n      }\r\n\r\n      &:active {\r\n        background: #fa5252;\r\n      }\r\n      transform: rotate(45deg);\r\n      color: red;\r\n    `}\r\n`;\r\nconst InsertFormPositioner = styled.div`\r\n  width: 100%;\r\n  bottom: 0;\r\n  left: 0;\r\n  position: absolute;\r\n\r\n  transition: 0.125s all ease-in;\r\n`;\r\n\r\nconst InsertForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  background: #f8f0fa;\r\n  padding: 16px;\r\n  padding-bottom: 72px;\r\n  border-bottom-left-radius: 16px;\r\n  border-bottom-right-radius: 16px;\r\n  border-top: 1px solid #e9ecef;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 12px;\r\n  border-radius: 4px;\r\n  border: 1px solid #dee2e6;\r\n  width: 100%;\r\n  outline: none;\r\n  font-size: 14px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  margin-top: 10px;\r\n  width: 50px;\r\n  height: 25px;\r\n  background: #f8f0fa;\r\n  border: 1px solid #e9ecef;\r\n  &:hover {\r\n    background: #63e6be;\r\n  }\r\n  &:active {\r\n    background: #20c997;\r\n  }\r\n`;\r\n\r\nfunction Create() {\r\n  const [open, setOpen] = useState(false);\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const dispatch = useTodoDispatch();\r\n  const nextId = useTodoNextId();\r\n\r\n  const onToggle = () => {\r\n    setOpen(!open);\r\n  };\r\n  const onChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch({\r\n      type: \"CREATE\",\r\n      todo: {\r\n        id: nextId.current,\r\n        text: value,\r\n        done: false,\r\n        complete: false,\r\n      },\r\n    });\r\n    nextId.current = nextId.current + 1;\r\n    setValue(\"\");\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {open && (\r\n        <InsertFormPositioner>\r\n          <InsertForm onSubmit={onSubmit}>\r\n            <Input\r\n              placeholder=\"할일 입력후 확인 또는 Enter를 누르세요\"\r\n              autoFocus\r\n              onChange={onChange}\r\n              value={value}\r\n            />\r\n            <SubmitButton onSubmit={onSubmit}>확인</SubmitButton>\r\n          </InsertForm>\r\n        </InsertFormPositioner>\r\n      )}\r\n      <AddButton onClick={onToggle} open={open}>\r\n        <MdAdd />\r\n      </AddButton>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Create;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { MdDone, MdDelete } from \"react-icons/md\";\r\nimport { useTodoDispatch } from \"../Context\";\r\n\r\nconst CheckCircle = styled.div`\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 16px;\r\n  border: 1px solid #ced4da;\r\n  font-size: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 20px;\r\n  cursor: pointer;\r\n  transition: 1s all ease-in;\r\n  ${(props) =>\r\n    props.done &&\r\n    css`\r\n      border: 1px solid #38d9a9;\r\n      color: #38d9a9;\r\n    `}\r\n`;\r\n\r\nconst Text = styled.div`\r\n  flex: 1;\r\n  font-size: 20px;\r\n  color: #495057;\r\n  transition: 1s all ease-in;\r\n  ${(props) =>\r\n    props.done &&\r\n    css`\r\n      text-decoration: line-through;\r\n\r\n      color: #ced4da;\r\n    `}\r\n`;\r\n\r\nconst Remove = styled.div`\r\n  opacity: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #dee2e6;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #ff6b6b;\r\n  }\r\n`;\r\n\r\nconst ItemBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  &:hover {\r\n    ${Remove} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Item({ id, done, text }) {\r\n  const dispatch = useTodoDispatch();\r\n\r\n  const onToggle = () => {\r\n    dispatch({\r\n      type: \"TOGGLE\",\r\n      id,\r\n    });\r\n  };\r\n\r\n  const onRemove = () =>\r\n    dispatch({\r\n      type: \"REMOVE\",\r\n      id,\r\n    });\r\n\r\n  return (\r\n    <ItemBlock>\r\n      <CheckCircle done={done} onClick={onToggle}>\r\n        {done && <MdDone />}\r\n      </CheckCircle>\r\n      <Text done={done}>{text}</Text>\r\n      <Remove onClick={onRemove}>\r\n        <MdDelete />\r\n      </Remove>\r\n    </ItemBlock>\r\n  );\r\n}\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Create from \"./Create\";\r\nimport { useTodoState } from \"../Context\";\r\n\r\nimport Item from \"./Item\";\r\n\r\nconst TodoListBlock = styled.div`\r\n  position: relative;\r\n  width: 50%;\r\n  height: 100%;\r\n  background: white;\r\n  overflow: auto;\r\n  border-right: 1px solid #e9ecef;\r\n  border-bottom-left-radius: 16px;\r\n`;\r\n\r\nconst TodoHeadBlcok = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  border-bottom: 1px solid #e9ecef;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 24px;\r\n`;\r\n\r\nfunction Todolist() {\r\n  const todos = useTodoState();\r\n  return (\r\n    <TodoListBlock>\r\n      <TodoHeadBlcok>할 일</TodoHeadBlcok>\r\n      {todos.map((todo) => (\r\n        <Item key={todo.id} id={todo.id} text={todo.text} done={todo.done} />\r\n      ))}\r\n      <Create />\r\n    </TodoListBlock>\r\n  );\r\n}\r\n\r\nexport default Todolist;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst CompleteitemBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n`;\r\n\r\nconst CompleteText = styled.div`\r\n  flex: 1;\r\n  font-size: 20px;\r\n  color: #495057;\r\n`;\r\nfunction Completeitem({ id, complete, text }) {\r\n  return (\r\n    <CompleteitemBlock>\r\n      {complete && <CompleteText>{text}</CompleteText>}\r\n    </CompleteitemBlock>\r\n  );\r\n}\r\n\r\nexport default Completeitem;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Completeitem from \"./Completeitem\";\r\nimport { useTodoState } from \"../Context\";\r\n\r\nconst CompleteListBlock = styled.div`\r\n  width: 50%;\r\n  height: 100%;\r\n  background: white;\r\n  overflow: auto;\r\n  border-bottom-right-radius: 16px;\r\n`;\r\n\r\nconst CompleteListHeadBlock = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  border-bottom: 1px solid #e9ecef;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 24px;\r\n`;\r\n\r\nfunction Completelist() {\r\n  const todos = useTodoState();\r\n  return (\r\n    <CompleteListBlock>\r\n      <CompleteListHeadBlock>완료된 일</CompleteListHeadBlock>\r\n      {todos.map((todo) => (\r\n        <Completeitem\r\n          key={todo.id}\r\n          id={todo.id}\r\n          text={todo.text}\r\n          complete={todo.complete}\r\n        />\r\n      ))}\r\n    </CompleteListBlock>\r\n  );\r\n}\r\n\r\nexport default Completelist;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Todolist from \"./Todolist\";\r\nimport Completelist from \"./Completelist\";\r\n\r\nconst ListBlock = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  height: 400px;\r\n  background: white;\r\n  border-bottom-left-radius: 16px;\r\n  border-bottom-right-radius: 16px;\r\n`;\r\n\r\nfunction List() {\r\n  return (\r\n    <ListBlock>\r\n      <Todolist />\r\n      <Completelist />\r\n    </ListBlock>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import React from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport Template from \"./components/Template\";\nimport Head from \"./components/Head\";\nimport List from \"./components/List\";\nimport { TodoProvider } from \"./Context\";\n\nconst GlobalStyle = createGlobalStyle`\nbody{\n  background:#edf2ff;\n}\n`;\n\nfunction App() {\n  return (\n    <TodoProvider>\n      <GlobalStyle />\n      <Template>\n        <Head />\n        <List />\n      </Template>\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}